[{"path":"https://manabdoli.github.io/du4tnr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 du4tnr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"idea","dir":"Articles","previous_headings":"","what":"Idea","title":"du4tnr","text":"working different cohort student researchers NAARE program CSUF, recognized leaving students data cleaning pre-processing valuable part training, becomes nightmare comes validating final work products. maintain consistency make preprocessing choices transparent, created R-package named NACCdata, NACC, organization provided us data. Since permission share data, created new, data-less package: du4tnr (Data Utility Transparency Reproduciblity). also added new feature recording datasets/variables SQLite database facilitate sharing verified datasets among large group collaborators.","code":""},{"path":[]},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"cleands-clean-dataset-using-instructions-in-a-data-fream","dir":"Articles","previous_headings":"Features","what":"cleanDS: Clean Dataset using instructions in a Data.Fream","title":"du4tnr","text":"main feature original package reduce selection, renaming, setting missing values NA, redefining levels categorical variables. important step NACC data large number variables (1936) used numerical values presenting categorical variables missing values. Let’s use mtcars example: first two rows show categorical variables turned factors meaningful levels. last row shows records gear==5 considered NA. cleanDS uses cleanMTcars select, clean rename three variables: CleanDS can pass variables using addCols parameter, can skip renaming needed (Rename=FALSE):","code":"cleanMTcars <- data.frame(   Name=c('vs', 'am', 'gear'),   CurrentVal=c('0,1','0,1',''),   NewLevel=c('V-shape,Straight','Manual,Automatic',''),   NA_Vals=c('','','5'),   Rename=c('Engine.Shape','Transmission', 'Forward.Gears')) cleanMTcars #>   Name CurrentVal         NewLevel NA_Vals        Rename #> 1   vs        0,1 V-shape,Straight          Engine.Shape #> 2   am        0,1 Manual,Automatic          Transmission #> 3 gear                                   5 Forward.Gears cleanDS(mtcars, cleanDF=cleanMTcars, Rename=TRUE) |> tail(10) #>                  Engine.Shape Transmission Forward.Gears #> AMC Javelin           V-shape       Manual             3 #> Camaro Z28            V-shape       Manual             3 #> Pontiac Firebird      V-shape       Manual             3 #> Fiat X1-9            Straight    Automatic             4 #> Porsche 914-2         V-shape    Automatic            NA #> Lotus Europa         Straight    Automatic            NA #> Ford Pantera L        V-shape    Automatic            NA #> Ferrari Dino          V-shape    Automatic            NA #> Maserati Bora         V-shape    Automatic            NA #> Volvo 142E           Straight    Automatic             4 processedMTcars <- cleanDS(mtcars, cleanDF=cleanMTcars,                          Rename=FALSE, addCols=colnames(mtcars))  processedMTcars |> head(10) #>                         vs        am gear  mpg cyl  disp  hp drat    wt  qsec #> Mazda RX4          V-shape Automatic    4 21.0   6 160.0 110 3.90 2.620 16.46 #> Mazda RX4 Wag      V-shape Automatic    4 21.0   6 160.0 110 3.90 2.875 17.02 #> Datsun 710        Straight Automatic    4 22.8   4 108.0  93 3.85 2.320 18.61 #> Hornet 4 Drive    Straight    Manual    3 21.4   6 258.0 110 3.08 3.215 19.44 #> Hornet Sportabout  V-shape    Manual    3 18.7   8 360.0 175 3.15 3.440 17.02 #> Valiant           Straight    Manual    3 18.1   6 225.0 105 2.76 3.460 20.22 #> Duster 360         V-shape    Manual    3 14.3   8 360.0 245 3.21 3.570 15.84 #> Merc 240D         Straight    Manual    4 24.4   4 146.7  62 3.69 3.190 20.00 #> Merc 230          Straight    Manual    4 22.8   4 140.8  95 3.92 3.150 22.90 #> Merc 280          Straight    Manual    4 19.2   6 167.6 123 3.92 3.440 18.30 #>                   carb #> Mazda RX4            4 #> Mazda RX4 Wag        4 #> Datsun 710           1 #> Hornet 4 Drive       1 #> Hornet Sportabout    2 #> Valiant              1 #> Duster 360           4 #> Merc 240D            2 #> Merc 230             2 #> Merc 280             4"},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"sqlite-storage","dir":"Articles","previous_headings":"Features","what":"SQLite Storage","title":"du4tnr","text":"feature added create repository can shared collaborator save time recreating commonly used datasets. can also increase integrity data compared case CSV files shared colleagues. Let’s start scracth: Let’s close database: Let’s reuse : Now, let’s access database using second object: let’s create source file remove NAs add result new variable: Let’s check first instance database:","code":"dbPath <- 'myProject.db' res <- NULL if(file.exists(dbPath)){   if(!file.remove(dbPath)){     closeAllConnections()     unlink(dbPath, force = TRUE)   } } if(file.exists(dbPath)) stop('Cannot remove ', dbPath, '!\\n',                               'Close it by `db_close()` or restart R.') # Create a new SQLite database or open an existing one: projDB <- dbObj(dp_path = dbPath) print(projDB) #> SQLite Variable Storage Object #> Database path: myProject.db  #> Connection status: Open  #> Stored items: 0  #> Registered files: 0 # Add mtcars, cleanMTcars, and processedMTcars to the database projDB$add_var(vname = 'MTCars0', value = mtcars) #> Saved variable: MTCars0 projDB$add_var(vname = 'cleaningInstructions', value = cleanMTcars) #> Saved variable: cleaningInstructions projDB$add_var(vname = 'MTcars-Processed', value = processedMTcars,                 steps = c(\"rename and relabel `vs` and `am`\", \"set `gear==5` to `NA`\")) #> Saved variable: MTcars-Processed print(projDB) #> SQLite Variable Storage Object #> Database path: myProject.db  #> Connection status: Open  #> Stored items: 3  #> Registered files: 0  #>  #> items: #>                   name       type source_file                 created_at #> 1              MTCars0 data.frame        <NA> 2025-06-26 15:54:31.773012 #> 2     MTcars-Processed data.frame        <NA>  2025-06-26 15:54:31.77741 #> 3 cleaningInstructions data.frame        <NA> 2025-06-26 15:54:31.775575 #>                   updated_at #> 1 2025-06-26 15:54:31.773012 #> 2  2025-06-26 15:54:31.77741 #> 3 2025-06-26 15:54:31.775575 # Close the database projDB$close_db() #> Database connection closed print(projDB) #> SQLite Variable Storage Object #> Database path: myProject.db  #> Connection status: Closed projDB$reconnect_db() # No need to reintroduce the path print(projDB$list_vars()) # Just listing variables #>                   name       type source_file                 created_at #> 1              MTCars0 data.frame        <NA> 2025-06-26 15:54:31.773012 #> 2     MTcars-Processed data.frame        <NA>  2025-06-26 15:54:31.77741 #> 3 cleaningInstructions data.frame        <NA> 2025-06-26 15:54:31.775575 #>                   updated_at #> 1 2025-06-26 15:54:31.773012 #> 2  2025-06-26 15:54:31.77741 #> 3 2025-06-26 15:54:31.775575 myDB <- dbObj(dp_path = dbPath) print(myDB$list_vars()) #>                   name       type source_file                 created_at #> 1              MTCars0 data.frame        <NA> 2025-06-26 15:54:31.773012 #> 2     MTcars-Processed data.frame        <NA>  2025-06-26 15:54:31.77741 #> 3 cleaningInstructions data.frame        <NA> 2025-06-26 15:54:31.775575 #>                   updated_at #> 1 2025-06-26 15:54:31.773012 #> 2  2025-06-26 15:54:31.77741 #> 3 2025-06-26 15:54:31.775575 # Create an R Script fConn <- file(\"cleanMtcars.R\") writeLines(con = fConn, text = ' # Removing NAs from processedMTcars cleansedMTcatrs <- processedMTcars[complete.cases(processedMTcars),] ') close(fConn) # Run the R Script source(\"cleanMtcars.R\") # Add the new variable and its source file to the dataset myDB$add_var(vname = \"MTcars-cleaned\", cleansedMTcatrs,              steps = \"Remove NAs\") #> Saved variable: MTcars-cleaned print(myDB) #> SQLite Variable Storage Object #> Database path: myProject.db  #> Connection status: Open  #> Stored items: 4  #> Registered files: 0  #>  #> items: #>                   name       type source_file                 created_at #> 1              MTCars0 data.frame        <NA> 2025-06-26 15:54:31.773012 #> 2     MTcars-Processed data.frame        <NA>  2025-06-26 15:54:31.77741 #> 3       MTcars-cleaned data.frame        <NA> 2025-06-26 15:54:32.072288 #> 4 cleaningInstructions data.frame        <NA> 2025-06-26 15:54:31.775575 #>                   updated_at #> 1 2025-06-26 15:54:31.773012 #> 2  2025-06-26 15:54:31.77741 #> 3 2025-06-26 15:54:32.072288 #> 4 2025-06-26 15:54:31.775575 projDB$list_vars() #>                   name       type source_file                 created_at #> 1              MTCars0 data.frame        <NA> 2025-06-26 15:54:31.773012 #> 2     MTcars-Processed data.frame        <NA>  2025-06-26 15:54:31.77741 #> 3       MTcars-cleaned data.frame        <NA> 2025-06-26 15:54:32.072288 #> 4 cleaningInstructions data.frame        <NA> 2025-06-26 15:54:31.775575 #>                   updated_at #> 1 2025-06-26 15:54:31.773012 #> 2  2025-06-26 15:54:31.77741 #> 3 2025-06-26 15:54:32.072288 #> 4 2025-06-26 15:54:31.775575 myDB$close_db() #> Database connection closed"},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"descriptive-functions","dir":"Articles","previous_headings":"Features","what":"Descriptive Functions","title":"du4tnr","text":"package offers simple functions found useful summarizing describing data.","code":""},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"con_table-creating-contingency-tables","dir":"Articles","previous_headings":"Features > Descriptive Functions","what":"con_table: Creating contingency tables","title":"du4tnr","text":"following creates contingency table vs gear: con_table() can use one variable rows columns: function can also count NAs, needed:","code":"x <- projDB$get_var(\"MTcars-cleaned\") cont_table(x, vs~gear) #>           gear #> vs          3  4 #>   V-shape  12  2 #>   Straight  3 10 cont_table(x, vs~gear+am) #>           gear+am #> vs         3-Manual 4-Automatic 4-Manual #>   V-shape        12           2        0 #>   Straight        3           6        4 y <- projDB$get_var(\"MTcars-Processed\") cont_table(y, vs+am~gear, useNA = 'ifany') #>                     gear #> vs+am                 3  4 <NA> #>   Straight-Automatic  0  6    1 #>   Straight-Manual     3  4    0 #>   V-shape-Automatic   0  2    4 #>   V-shape-Manual     12  0    0"},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"total_col-and-total_row-adding-marginal-sums-to-tables-and-data-frames","dir":"Articles","previous_headings":"Features > Descriptive Functions","what":"total_col() and total_row(): Adding Marginal Sums to Tables and Data.frames","title":"du4tnr","text":"functions can add total column row count table data.frame:","code":"cont_table(y, vs+am~gear, useNA = 'ifany') |>    total_row() |> total_col() #>                     3  4 <NA> Total.Col #> Straight-Automatic  0  6    1         7 #> Straight-Manual     3  4    0         7 #> V-shape-Automatic   0  2    4         6 #> V-shape-Manual     12  0    0        12 #> Total.Row          15 12    5        32 y |> total_row() |> tail(10) #>                        vs        am gear   mpg cyl   disp   hp   drat      wt #> Camaro Z28        V-shape    Manual    3  13.3   8  350.0  245   3.73   3.840 #> Pontiac Firebird  V-shape    Manual    3  19.2   8  400.0  175   3.08   3.845 #> Fiat X1-9        Straight Automatic    4  27.3   4   79.0   66   4.08   1.935 #> Porsche 914-2     V-shape Automatic   NA  26.0   4  120.3   91   4.43   2.140 #> Lotus Europa     Straight Automatic   NA  30.4   4   95.1  113   3.77   1.513 #> Ford Pantera L    V-shape Automatic   NA  15.8   8  351.0  264   4.22   3.170 #> Ferrari Dino      V-shape Automatic   NA  19.7   6  145.0  175   3.62   2.770 #> Maserati Bora     V-shape Automatic   NA  15.0   8  301.0  335   3.54   3.570 #> Volvo 142E       Straight Automatic    4  21.4   4  121.0  109   4.11   2.780 #> Total                <NA>      <NA>   NA 642.9 198 7383.1 4694 115.09 102.952 #>                    qsec carb #> Camaro Z28        15.41    4 #> Pontiac Firebird  17.05    2 #> Fiat X1-9         18.90    1 #> Porsche 914-2     16.70    2 #> Lotus Europa      16.90    2 #> Ford Pantera L    14.50    4 #> Ferrari Dino      15.50    6 #> Maserati Bora     14.60    8 #> Volvo 142E        18.60    2 #> Total            571.16   90"},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"describe_ds-generates-a-summary-of-variables","dir":"Articles","previous_headings":"Features > Descriptive Functions","what":"describe_ds(): Generates a Summary of Variables","title":"du4tnr","text":"function creates summary variable, including counts NAs, .","code":"describe_ds(y, maxLevels = 3, var2row = FALSE) #> $Numerical #>       gear            mpg             cyl             disp       #>  Min.   :3.000   Min.   :10.40   Min.   :4.000   Min.   : 71.1   #>  1st Qu.:3.000   1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   #>  Median :3.000   Median :19.20   Median :6.000   Median :196.3   #>  Mean   :3.444   Mean   :20.09   Mean   :6.188   Mean   :230.7   #>  3rd Qu.:4.000   3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   #>  Max.   :4.000   Max.   :33.90   Max.   :8.000   Max.   :472.0   #>  NA's   :5                                                       #>        hp             drat             wt             qsec       #>  Min.   : 52.0   Min.   :2.760   Min.   :1.513   Min.   :14.50   #>  1st Qu.: 96.5   1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   #>  Median :123.0   Median :3.695   Median :3.325   Median :17.71   #>  Mean   :146.7   Mean   :3.597   Mean   :3.217   Mean   :17.85   #>  3rd Qu.:180.0   3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   #>  Max.   :335.0   Max.   :4.930   Max.   :5.424   Max.   :22.90   #>                                                                  #>       carb       #>  Min.   :1.000   #>  1st Qu.:2.000   #>  Median :2.000   #>  Mean   :2.812   #>  3rd Qu.:4.000   #>  Max.   :8.000   #>                  #>  #> $Categorical #>      vs            am             #> [1,]  V-shape:  18    Manual:  19 #> [2,] Straight:  14 Automatic:  13 #> [3,]"},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"which_ds-searching-datasets-for-variables","dir":"Articles","previous_headings":"Features > Descriptive Functions","what":"which_ds(): Searching datasets for variables","title":"du4tnr","text":"dealing multiple large datasets, can use functions see one variable mind: visible format:","code":"which_ds(c('Species', 'am', 'mpg', 'gpm'),           iris=iris, x=x, y=y) #>          iris     x     y #> Species  TRUE FALSE FALSE #> am      FALSE  TRUE  TRUE #> mpg     FALSE  TRUE  TRUE #> gpm     FALSE FALSE FALSE which_ds(c('Species', 'am', 'mpg', 'gpm'),           iris=iris, x=x, y=y)+0 #>         iris x y #> Species    1 0 0 #> am         0 1 1 #> mpg        0 1 1 #> gpm        0 0 0"},{"path":"https://manabdoli.github.io/du4tnr/articles/du4tnr.html","id":"future-development","dir":"Articles","previous_headings":"Features","what":"Future Development","title":"du4tnr","text":"Adding respSummary summarize variables different levels categorical response. Cross-Validation different cost functions.","code":""},{"path":"https://manabdoli.github.io/du4tnr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mansour Abdoli. Author, maintainer.","code":""},{"path":"https://manabdoli.github.io/du4tnr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Abdoli M (2025). du4tnr: Data Utility Transparency Reproducibility (DU4TnR). R package version 0.0.1.0000, https://manabdoli.github.io/du4tnr/.","code":"@Manual{,   title = {du4tnr: Data Utility for Transparency and Reproducibility (DU4TnR)},   author = {Mansour Abdoli},   year = {2025},   note = {R package version 0.0.1.0000},   url = {https://manabdoli.github.io/du4tnr/}, }"},{"path":"https://manabdoli.github.io/du4tnr/index.html","id":"du4tnr-data-utility-for-transparency-and-reproducibility","dir":"","previous_headings":"","what":"Data Utility for Transparency and Reproducibility (DU4TnR)","title":"Data Utility for Transparency and Reproducibility (DU4TnR)","text":"package originally developed help student scholars statistical research specific dataset. datasets removed used general purpose package collaboration students. Transparency Reproducibility achieved : - using table (Data Frame CSV file) document initial cleaning steps, - using database storage datasets. information, see vingette.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/briefSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating Summary Tables for levels of a categorical response. — briefSummary","title":"Generating Summary Tables for levels of a categorical response. — briefSummary","text":"function returns summaries numerical categorical predictors based levels categorical response variable.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/briefSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating Summary Tables for levels of a categorical response. — briefSummary","text":"","code":"briefSummary(x, response, maxsum = 7)"},{"path":"https://manabdoli.github.io/du4tnr/reference/briefSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating Summary Tables for levels of a categorical response. — briefSummary","text":"x data.frame summarized response character string containing name categorical response variable. maxsum numerical value (default 7) determining number summary details generated. numerical predictors, passed summary(), categorical variables, maximum number levels shown output.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/briefSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating Summary Tables for levels of a categorical response. — briefSummary","text":"briefSummary returns list containing two objects, one summary table numerical variables (called Numerical) list tables (called Categorical), table summarizing one categorical predictor.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/cleanDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleaning a Dataset — cleanDS","title":"Cleaning a Dataset — cleanDS","text":"Cleaning Dataset","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/cleanDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleaning a Dataset — cleanDS","text":"","code":"cleanDS(x, cleanDF, Rename = FALSE, addCols = NULL)"},{"path":"https://manabdoli.github.io/du4tnr/reference/cleanDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleaning a Dataset — cleanDS","text":"x dataset cleaned cleanDF data.frame includes instructions cleaning x; columns least include following columns: Name: Containing names variables extracted, CurrentVal: list valid values NewLevel: Level names used categorical variables NA_Vals: values levels replaced NA. Rename: Suggested new variable names, needed. CurrentVal given, values listed replaced NA. Rename logical value indicating whether variable names replaced values Rename column, given. addCols list additional columns included without change.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/cleanDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleaning a Dataset — cleanDS","text":"returns dataset consisting variables Name (cleaned) addCols (copied).","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/cleanDS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleaning a Dataset — cleanDS","text":"","code":"# Creating a sample cleanDF data frame for `mtccars` dataset:  cleanMTcars <- data.frame(     Name=c('vs', 'am', 'gear'),     CurrentVal=c('0,1','0,1',''),     NewLevel=c('V-shape,Straight','Manual,Automatic',''),     NA_Vals=c('','','5'),     Rename=c('Engine.Shape','Transmission', 'Forward.Gears')) # Extracting Data cleanDS(mtcars, cleanDF=cleanMTcars, Rename=TRUE) |> tail(10) #>                  Engine.Shape Transmission Forward.Gears #> AMC Javelin           V-shape       Manual             3 #> Camaro Z28            V-shape       Manual             3 #> Pontiac Firebird      V-shape       Manual             3 #> Fiat X1-9            Straight    Automatic             4 #> Porsche 914-2         V-shape    Automatic            NA #> Lotus Europa         Straight    Automatic            NA #> Ford Pantera L        V-shape    Automatic            NA #> Ferrari Dino          V-shape    Automatic            NA #> Maserati Bora         V-shape    Automatic            NA #> Volvo 142E           Straight    Automatic             4 cleanDS(mtcars, cleanDF=cleanMTcars, Rename=FALSE, addCols=colnames(mtcars)) |> head(10) #>                         vs        am gear  mpg cyl  disp  hp drat    wt  qsec #> Mazda RX4          V-shape Automatic    4 21.0   6 160.0 110 3.90 2.620 16.46 #> Mazda RX4 Wag      V-shape Automatic    4 21.0   6 160.0 110 3.90 2.875 17.02 #> Datsun 710        Straight Automatic    4 22.8   4 108.0  93 3.85 2.320 18.61 #> Hornet 4 Drive    Straight    Manual    3 21.4   6 258.0 110 3.08 3.215 19.44 #> Hornet Sportabout  V-shape    Manual    3 18.7   8 360.0 175 3.15 3.440 17.02 #> Valiant           Straight    Manual    3 18.1   6 225.0 105 2.76 3.460 20.22 #> Duster 360         V-shape    Manual    3 14.3   8 360.0 245 3.21 3.570 15.84 #> Merc 240D         Straight    Manual    4 24.4   4 146.7  62 3.69 3.190 20.00 #> Merc 230          Straight    Manual    4 22.8   4 140.8  95 3.92 3.150 22.90 #> Merc 280          Straight    Manual    4 19.2   6 167.6 123 3.92 3.440 18.30 #>                   carb #> Mazda RX4            4 #> Mazda RX4 Wag        4 #> Datsun 710           1 #> Hornet 4 Drive       1 #> Hornet Sportabout    2 #> Valiant              1 #> Duster 360           4 #> Merc 240D            2 #> Merc 230             2 #> Merc 280             4"},{"path":"https://manabdoli.github.io/du4tnr/reference/cont_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Contingency Table — cont_table","title":"Contingency Table — cont_table","text":"Creating contingency table based response(s) ~ predictor(s) formula.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/cont_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contingency Table — cont_table","text":"","code":"cont_table(x, formula, useNA = \"no\")"},{"path":"https://manabdoli.github.io/du4tnr/reference/cont_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contingency Table — cont_table","text":"x data frame formula response(s) ~ predictor(s) formula. multiple variables used response predictor, concat used create new variable concatenating values variables used. @param useNA passed table() can take values: c(\"\", \"ifany\", \"always\"). default value \"\".","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/cont_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contingency Table — cont_table","text":"contingency table based formula: Rows representing response(s)  columns representing predictor(s).","code":""},{"path":[]},{"path":[]},{"path":"https://manabdoli.github.io/du4tnr/reference/dbObj.html","id":null,"dir":"Reference","previous_headings":"","what":"dbObj creates an object with a connection to a SQLite database file and a set of functions for recording and retrieving variables in the dataset. — dbObj","title":"dbObj creates an object with a connection to a SQLite database file and a set of functions for recording and retrieving variables in the dataset. — dbObj","text":"dbObj creates object connection SQLite database file set functions recording retrieving variables dataset.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/dbObj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dbObj creates an object with a connection to a SQLite database file and a set of functions for recording and retrieving variables in the dataset. — dbObj","text":"","code":"dbObj(dp_path = \"myVars.db\")"},{"path":"https://manabdoli.github.io/du4tnr/reference/dbObj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dbObj creates an object with a connection to a SQLite database file and a set of functions for recording and retrieving variables in the dataset. — dbObj","text":"db_path path sqlite database file. vname variable name value value assigned variable source_file name file associated variable file_path full file imported variable uploaded. steps character vector used documenting steps creating variable processor function customizing importing/uploading files","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/dbObj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dbObj creates an object with a connection to a SQLite database file and a set of functions for recording and retrieving variables in the dataset. — dbObj","text":"dbObj reurns du4tnr object includes sqlite_storage object functions updating accessing , including: add_var(vname, value, source_file = NULL, steps = NULL): adds variable database updates source file steps supplied. import_file(vname, file_path, steps = NULL, processor = NULL): imports data file variable based file extension (default) using processor function. adds steps provided uses file source. add_step(vname, steps): Documents steps existing variable. list_files(): Lists files imported database. list_vars(): List variables added database. list_steps(vname=NULL): List steps variables (default) given variable. get_var(vname): Returns value variable database. var_exists(vname): Returns TRUE variable added database. del_var(vname): Removes variable database close_db(): Closes database connection. reconnect_db(): Reconnects current du4tnr original database.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/describe_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a Dataset — describe_ds","title":"Describe a Dataset — describe_ds","text":"Describe Dataset","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/describe_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a Dataset — describe_ds","text":"","code":"describe_ds(x, maxLevels = 7, var2row = FALSE)"},{"path":"https://manabdoli.github.io/du4tnr/reference/describe_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a Dataset — describe_ds","text":"x dataset maxLevels maximum number levels categorical variables (default 7) var2row TRUE, variable summarized row; default FALSE, column represents summary variable","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/describe_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a Dataset — describe_ds","text":"list two tables (Numerical Categorical) containing summary information variables type.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/du4tnr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"du4tnr: Data Utility for Transparency and Reproducibility (DU4TnR) — du4tnr-package","title":"du4tnr: Data Utility for Transparency and Reproducibility (DU4TnR) — du4tnr-package","text":"set tools, inclduing SQLite-based variable storage object, increased transparency reproducibility collaborative data analysis.","code":""},{"path":[]},{"path":"https://manabdoli.github.io/du4tnr/reference/du4tnr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"du4tnr: Data Utility for Transparency and Reproducibility (DU4TnR) — du4tnr-package","text":"Maintainer: Mansour Abdoli mabdoli@fullerton.edu (ORCID)","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://manabdoli.github.io/du4tnr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/sqlite_storage.R.html","id":null,"dir":"Reference","previous_headings":"","what":"SQLite Storage for improving Transparency and Reproducibility — Sqlite Storage","title":"SQLite Storage for improving Transparency and Reproducibility — Sqlite Storage","text":"sqlite_storage: variable Variable Storage S3 Object File Support Requires: RSQLite, DBI packages code initially generated Claude Sonnet 4 Corrections modification added Mansour Abdoli, PhD main function consists path DB file connection. Initialize Database Connection Initialize database Register file database Registering file sqlite_storage object Save Variable Database Provenance Save variables sqlite_storage object Save Variable File Processing Steps Create variable data file save sqlite_storage object Load file based type Save detailed steps variable Load Variable Database Get variable sqlite_storage object Get Variable Provenance Get documented steps variable sqlite_storage object List items Provenance List variables sqlite_storage object List Registered Files List files added sqlite_storage object Check Variable Exists Check variable exists sqlite_storage object Delete Variable Remove variable sqlite_storage object Close Database Connection Close sqlite_storage's connection Print sqlite_storage object","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/sqlite_storage.R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLite Storage for improving Transparency and Reproducibility — Sqlite Storage","text":"","code":"sqlite_storage(db_path = \"items.db\")  initialize_db(obj)  # S3 method for class 'sqlite_storage' initialize_db(obj)  register_file(obj, file_path)  # S3 method for class 'sqlite_storage' register_file(obj, file_path)  save_var(obj, name, value, source_file = NULL, steps = NULL)  # S3 method for class 'sqlite_storage' save_var(obj, name, value, source_file = NULL, steps = NULL)  save_file_var(obj, name, file_path, steps = NULL, processor = NULL)  # S3 method for class 'sqlite_storage' save_file_var(obj, name, file_path, steps = NULL, processor = NULL)  load_file_by_type(file_path)  save_variable_steps(obj, var_name, steps)  load_var(obj, name)  # S3 method for class 'sqlite_storage' load_var(obj, name)  get_provenance(obj, name)  # S3 method for class 'sqlite_storage' get_provenance(obj, name)  list_vars(obj)  # S3 method for class 'sqlite_storage' list_vars(obj)  list_files(obj)  # S3 method for class 'sqlite_storage' list_files(obj)  var_exists(obj, name)  # S3 method for class 'sqlite_storage' var_exists(obj, name)  delete_var(obj, name)  # S3 method for class 'sqlite_storage' delete_var(obj, name)  close_db(obj)  # S3 method for class 'sqlite_storage' close_db(obj)  # S3 method for class 'sqlite_storage' print(x, ...)"},{"path":"https://manabdoli.github.io/du4tnr/reference/sqlite_storage.R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQLite Storage for improving Transparency and Reproducibility — Sqlite Storage","text":"db_path Character string specifying path SQLite database file. Default \"items.db\" current working directory. obj object class \"sqlite_storage\" file_path Path file name Character string, name variable delete value R object stored source_file Optional, path source file used create variable steps Character vector steps processor Optional, custom function process file. NULL, uses default processors. var_name Variable name","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/sqlite_storage.R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SQLite Storage for improving Transparency and Reproducibility — Sqlite Storage","text":"object class \"sqlite_storage\" Loaded R object stored R object Data frame provenance information data frame variable information including provenance data frame file information Logical, TRUE variable exists","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/sqlite_storage.R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SQLite Storage for improving Transparency and Reproducibility — Sqlite Storage","text":"","code":"if (FALSE) { # \\dontrun{ # Create storage object storage <- sqlite_storage(\"my_vars.db\")  # Save and load items with provenance save_var(storage, \"x\", c(1, 2, 3), source_file = \"analysis.R\",          steps = \"Created test vector\") x <- load_var(storage, \"x\")  # Store file-based items save_file_var(storage, \"data\", \"mydata.csv\",               steps = c(\"Load CSV\", \"Clean data\", \"Remove NAs\"))  # Clean up close_db(storage) } # }"},{"path":"https://manabdoli.github.io/du4tnr/reference/tableSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing Functions for table Object — tableSummary","title":"Summarizing Functions for table Object — tableSummary","text":"Utility functions adding Totals total_col adds column summary table/data.frame. total_row adds row summary table/data.frame. total_col.table adds column summary table. total_row.table Adds row summary table. total_col.matrix adds column summary matrix. total_col.matrix adds row summary matrix. total_col.table adds column summary data.frame. total_row.table Adds row summary table.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/tableSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing Functions for table Object — tableSummary","text":"","code":"total_col(x, na.rm = FALSE)  total_row(x, na.rm = FALSE)  # S3 method for class 'table' total_col(x, na.rm = FALSE)  # S3 method for class 'table' total_row(x, na.rm = FALSE)  # S3 method for class 'matrix' total_col(x, na.rm = FALSE)  # S3 method for class 'matrix' total_row(x, na.rm = FALSE)  # S3 method for class 'data.frame' total_col(x, na.rm = FALSE)  # S3 method for class 'data.frame' total_row(x, na.rm = FALSE)"},{"path":"https://manabdoli.github.io/du4tnr/reference/tableSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing Functions for table Object — tableSummary","text":"x table data.frame object.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/tableSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing Functions for table Object — tableSummary","text":"total_col returns new object additional column, named Total Total.Col total_row returns new object additional row, named Total Total.Row","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/util.R.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper functions — Utility functions for internal use","title":"Internal helper functions — Utility functions for internal use","text":"Calculate file hash integrity checking utility function creates new variable joining values given list variables.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/util.R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper functions — Utility functions for internal use","text":"","code":"calculate_file_hash(file_path)  concat(x, formula)"},{"path":"https://manabdoli.github.io/du4tnr/reference/util.R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper functions — Utility functions for internal use","text":"file_path Path file x data frame variables taken . formula response-less formula (~ followed +-separated list variables)","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/util.R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper functions — Utility functions for internal use","text":"MD5 hash file new variable concatenating values variables given formula.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/util.R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal helper functions — Utility functions for internal use","text":"","code":"concat(data.frame(A=c('a', 'b', 'a', 'b'), B=c('x', 'y', 'y', 'x')), ~A+B) #> Error in concat(data.frame(A = c(\"a\", \"b\", \"a\", \"b\"), B = c(\"x\", \"y\",     \"y\", \"x\")), ~A + B): could not find function \"concat\""},{"path":"https://manabdoli.github.io/du4tnr/reference/varClean.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable cleaning functions — varClean","title":"Variable cleaning functions — varClean","text":"set functions cleaning variables dataset. setNAs used set list given values NA.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/varClean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable cleaning functions — varClean","text":"","code":"setNAs(x, naVals = NA)"},{"path":"https://manabdoli.github.io/du4tnr/reference/varClean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable cleaning functions — varClean","text":"x vector updated new NA's. naVals vector values considered NA. default value NA (new NA's introduced).","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/varClean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable cleaning functions — varClean","text":"modified version x values naVals replaced NA's.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/which_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Searching a column name in datasets (data frames) — which_ds","title":"Searching a column name in datasets (data frames) — which_ds","text":"helper function looking one variable name list datasets. Looking name several variables list datasets.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/which_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searching a column name in datasets (data frames) — which_ds","text":"","code":"whichds(columnName = NULL, ...)  which_ds(columnName = NULL, ...)"},{"path":"https://manabdoli.github.io/du4tnr/reference/which_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searching a column name in datasets (data frames) — which_ds","text":"columnName character vector name variables interest. ... comma separated list datasets dss list datasets variable names searched .","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/which_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searching a column name in datasets (data frames) — which_ds","text":"named, logical array determines dataset includes variables listed columnName.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/xvalid.R.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Fold Cross Validation and Accuracy Functions — xvalid","title":"K-Fold Cross Validation and Accuracy Functions — xvalid","text":"set functions help performing cross-validation using different method (default=glm). mcrBin: computing mis-classification rate probability prediction bi-level variable. misMul: Mis-prediction multi-level factor response misMulOH: returns mis-predictions made multiple-level response one-hot format mse: computes mean squared deviation predictor actual value. cvGlm: performing K-fold cross-validation (using GLM method default) data model defined formula.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/xvalid.R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Fold Cross Validation and Accuracy Functions — xvalid","text":"","code":"mcrBin(yhat, y, cutoff = 0.5, FUN = mean)  misMul(yhat, y, FUN = mean)  misMulOH(yhat, y, FUN = mean)  mse(yhat, y)  cvGlm(   formula,   data,   K = 10,   cost = accBin,   method = glm,   predType = \"response\",   FUN = mean,   na.rm = TRUE,   ... )"},{"path":"https://manabdoli.github.io/du4tnr/reference/xvalid.R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Fold Cross Validation and Accuracy Functions — xvalid","text":"yhat predicted value y actual value cutoff value used convert probability 0/1 output. default cutoff value 0.5. FUN function(s) used calculate summary predictions. default value mean. formula model formula form y~f(X), y response f(x) function predictors vector X. data dataset containing response y predictors X. K number folds used cross validation. cost function measures accuracy loss. default value acc function. method method fits data formula returns model object. default value glm. predType type prediction needed cost model work properly. default value 'response'. ... parameters; passed method function.","code":""},{"path":"https://manabdoli.github.io/du4tnr/reference/xvalid.R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Fold Cross Validation and Accuracy Functions — xvalid","text":"mcrBin returns rate mis-predictions cutoff level. misMul returns mis-prediction rate multi-level categorical variable. mse returns mean squared error (MSE) value predictions. cvGlm returns array K calculated cost values computed train/test pairs generated data.","code":""}]
