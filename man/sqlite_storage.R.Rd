% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sqlite_storage.R
\name{Sqlite Storage}
\alias{Sqlite Storage}
\alias{sqlite_storage}
\alias{initialize_db}
\alias{initialize_db.sqlite_storage}
\alias{register_file}
\alias{register_file.sqlite_storage}
\alias{save_var}
\alias{save_var.sqlite_storage}
\alias{save_file_var}
\alias{save_file_var.sqlite_storage}
\alias{load_file_by_type}
\alias{save_variable_steps}
\alias{load_var}
\alias{load_var.sqlite_storage}
\alias{get_provenance}
\alias{get_provenance.sqlite_storage}
\alias{list_vars}
\alias{list_vars.sqlite_storage}
\alias{list_files}
\alias{list_files.sqlite_storage}
\alias{var_exists}
\alias{var_exists.sqlite_storage}
\alias{delete_var}
\alias{delete_var.sqlite_storage}
\alias{close_db}
\alias{close_db.sqlite_storage}
\alias{print.sqlite_storage}
\title{SQLite Storage for improving Transparency and Reproducibility}
\usage{
sqlite_storage(db_path = "items.db")

initialize_db(obj)

\method{initialize_db}{sqlite_storage}(obj)

register_file(obj, file_path)

\method{register_file}{sqlite_storage}(obj, file_path)

save_var(obj, name, value, source_file = NULL, steps = NULL)

\method{save_var}{sqlite_storage}(obj, name, value, source_file = NULL, steps = NULL)

save_file_var(obj, name, file_path, steps = NULL, processor = NULL)

\method{save_file_var}{sqlite_storage}(obj, name, file_path, steps = NULL, processor = NULL)

load_file_by_type(file_path)

save_variable_steps(obj, var_name, steps)

load_var(obj, name)

\method{load_var}{sqlite_storage}(obj, name)

get_provenance(obj, name)

\method{get_provenance}{sqlite_storage}(obj, name)

list_vars(obj)

\method{list_vars}{sqlite_storage}(obj)

list_files(obj)

\method{list_files}{sqlite_storage}(obj)

var_exists(obj, name)

\method{var_exists}{sqlite_storage}(obj, name)

delete_var(obj, name)

\method{delete_var}{sqlite_storage}(obj, name)

close_db(obj)

\method{close_db}{sqlite_storage}(obj)

\method{print}{sqlite_storage}(x, ...)
}
\arguments{
\item{db_path}{Character string specifying the path to the SQLite database file.
Default is "items.db" in the current working directory.}

\item{obj}{An object of class "sqlite_storage"}

\item{file_path}{Path to the file}

\item{name}{Character string, name of the variable to delete}

\item{value}{Any R object to be stored}

\item{source_file}{Optional, path to source file used to create this variable}

\item{steps}{Character vector of steps}

\item{processor}{Optional, custom function to process the file. If NULL, uses default processors.}

\item{var_name}{Variable name}
}
\value{
An object of class "sqlite_storage"

Loaded R object

The stored R object

Data frame with provenance information

A data frame with variable information including provenance

A data frame with file information

Logical, TRUE if variable exists
}
\description{
sqlite_storage: A variable Variable Storage S3 Object with File Support
Requires: RSQLite, DBI packages

The code is initially generated by Claude Sonnet 4
Corrections and modification were added by Mansour Abdoli, PhD

The main function consists of a path to the DB file and its connection.

Initialize Database Connection

Initialize database

Register a file in the database

Registering a file in a sqlite_storage object

Save Variable to Database with Provenance

Save variables in a sqlite_storage object

Save Variable from File with Processing Steps

Create a variable from a data file and save to a sqlite_storage object

Load file based on its type

Save detailed steps for a variable

Load Variable from Database

Get a variable from a sqlite_storage object

Get Variable Provenance

Get documented steps from a variable from a sqlite_storage object

List All items with Provenance

List variables in a sqlite_storage object

List All Registered Files

List files added to a sqlite_storage object

Check if Variable Exists

Check if a variable exists in a sqlite_storage object

Delete Variable

Remove a variable from a sqlite_storage object

Close Database Connection

Close a sqlite_storage's connection

Print a sqlite_storage object
}
\examples{
\dontrun{
# Create storage object
storage <- sqlite_storage("my_vars.db")

# Save and load items with provenance
save_var(storage, "x", c(1, 2, 3), source_file = "analysis.R",
         steps = "Created test vector")
x <- load_var(storage, "x")

# Store file-based items
save_file_var(storage, "data", "mydata.csv",
              steps = c("Load CSV", "Clean data", "Remove NAs"))

# Clean up
close_db(storage)
}
}
\keyword{internal}
